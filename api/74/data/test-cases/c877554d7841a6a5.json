{"uid":"c877554d7841a6a5","name":"User should be able to create a new project","fullName":"com.example.teamcity.api.TeamcityCreateProjectTest.userCreatesProjectTest","historyId":"237a189b2f33677c6b57f42b5bda076c","time":{"start":1744703685995,"stop":1744703691939,"duration":5944},"description":"","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"passed","steps":[{"name":"Create user","time":{"start":1744703686160,"stop":1744703689310,"duration":3150},"status":"passed","steps":[],"attachments":[{"uid":"2169892bd3030086","name":"Request","source":"2169892bd3030086.html","type":"text/html","size":1381},{"uid":"da450586318836a8","name":"HTTP/1.1 200 ","source":"da450586318836a8.html","type":"text/html","size":2088}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Create a new project by user","time":{"start":1744703689315,"stop":1744703690553,"duration":1238},"status":"passed","steps":[],"attachments":[{"uid":"9f9c15291ba42270","name":"Request","source":"9f9c15291ba42270.html","type":"text/html","size":965},{"uid":"68036fdbce69c8ff","name":"HTTP/1.1 200 ","source":"68036fdbce69c8ff.html","type":"text/html","size":2225}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"check project was created successfully with correct data","time":{"start":1744703690554,"stop":1744703691922,"duration":1368},"status":"passed","steps":[],"attachments":[{"uid":"2a4cc7835f3f7713","name":"Request","source":"2a4cc7835f3f7713.html","type":"text/html","size":604},{"uid":"b826914e3d74b8bb","name":"HTTP/1.1 200 ","source":"b826914e3d74b8bb.html","type":"text/html","size":2225}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"positive"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.example.teamcity.api.TeamcityCreateProjectTest]/[method:userCreatesProjectTest()]"},{"name":"host","value":"fv-az1436-856"},{"name":"thread","value":"4106@fv-az1436-856.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.example.teamcity.api.TeamcityCreateProjectTest"},{"name":"testClass","value":"com.example.teamcity.api.TeamcityCreateProjectTest"},{"name":"testMethod","value":"userCreatesProjectTest"},{"name":"suite","value":"com.example.teamcity.api.TeamcityCreateProjectTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":38},"items":[{"uid":"cb0e72856f796d7c","reportUrl":"https://paceville.github.io/teamcityTests/api/73//#testresult/cb0e72856f796d7c","status":"passed","time":{"start":1744702367463,"stop":1744702373284,"duration":5821}},{"uid":"9d002789bb2949c6","reportUrl":"https://paceville.github.io/teamcityTests/api/71//#testresult/9d002789bb2949c6","status":"passed","time":{"start":1744679258244,"stop":1744679263425,"duration":5181}},{"uid":"73526bfdea14743c","reportUrl":"https://paceville.github.io/teamcityTests/api/70//#testresult/73526bfdea14743c","status":"passed","time":{"start":1744678651073,"stop":1744678656222,"duration":5149}},{"uid":"ca26b6e73eb82682","reportUrl":"https://paceville.github.io/teamcityTests/api/68//#testresult/ca26b6e73eb82682","status":"passed","time":{"start":1744677431039,"stop":1744677436791,"duration":5752}},{"uid":"3931033a01e8a006","reportUrl":"https://paceville.github.io/teamcityTests/api/67//#testresult/3931033a01e8a006","status":"passed","time":{"start":1744676274466,"stop":1744676281249,"duration":6783}},{"uid":"5ee92dbb5e3ae7f7","reportUrl":"https://paceville.github.io/teamcityTests/api/66//#testresult/5ee92dbb5e3ae7f7","status":"failed","statusDetails":"\nMultiple Failures (1 failure)\n-- failure 1 --\nExpecting actual:\n  Project(name=test_NtnGYokIxT, id=test_bmhTZzWJeX, locator=_Root)\nto be equal to:\n  Project(name=test_qPChEEDJqJ, id=test_ZlBiWjMkYa, locator=_Root)\nwhen recursively comparing field by field, but found the following 2 differences:\n\nfield/property 'id' differ:\n- actual value  : \"test_bmhTZzWJeX\"\n- expected value: \"test_ZlBiWjMkYa\"\nCompared objects have java types and were thus compared with equals method\n\nfield/property 'name' differ:\n- actual value  : \"test_NtnGYokIxT\"\n- expected value: \"test_qPChEEDJqJ\"\nCompared objects have java types and were thus compared with equals method\n\nThe recursive comparison was performed with this configuration:\n- no equals methods were used in the comparison EXCEPT for java JDK types since introspecting JDK types is forbidden in java 17+ (use withEqualsForType to register a specific way to compare a JDK type if you need it)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n- the introspection strategy used was: DefaultRecursiveComparisonIntrospectionStrategy\nat TeamcityCreateProjectTest.lambda$userCreatesProjectTest$0(TeamcityCreateProjectTest.java:47)","time":{"start":1744675529516,"stop":1744675535121,"duration":5605}},{"uid":"db4d119884ea3419","reportUrl":"https://paceville.github.io/teamcityTests/api/65//#testresult/db4d119884ea3419","status":"passed","time":{"start":1744673519819,"stop":1744673525207,"duration":5388}},{"uid":"76dd24c4212fe25d","reportUrl":"https://paceville.github.io/teamcityTests/api/64//#testresult/76dd24c4212fe25d","status":"passed","time":{"start":1744672334145,"stop":1744672339786,"duration":5641}},{"uid":"60dfb137ad70cf3c","reportUrl":"https://paceville.github.io/teamcityTests/api/63//#testresult/60dfb137ad70cf3c","status":"passed","time":{"start":1744671295901,"stop":1744671301635,"duration":5734}},{"uid":"f82704281c6eccd5","reportUrl":"https://paceville.github.io/teamcityTests/api/62//#testresult/f82704281c6eccd5","status":"passed","time":{"start":1744669720464,"stop":1744669725984,"duration":5520}},{"uid":"ff8593573d78897a","reportUrl":"https://paceville.github.io/teamcityTests/api/61//#testresult/ff8593573d78897a","status":"passed","time":{"start":1744668498719,"stop":1744668504333,"duration":5614}},{"uid":"57b8a1292e2d132","reportUrl":"https://paceville.github.io/teamcityTests/api/60//#testresult/57b8a1292e2d132","status":"passed","time":{"start":1744667701304,"stop":1744667707107,"duration":5803}},{"uid":"9f811a92a3b8f43b","reportUrl":"https://paceville.github.io/teamcityTests/api/59//#testresult/9f811a92a3b8f43b","status":"passed","time":{"start":1744666933662,"stop":1744666938739,"duration":5077}},{"uid":"4c48408c946e3d6e","reportUrl":"https://paceville.github.io/teamcityTests/api/58//#testresult/4c48408c946e3d6e","status":"passed","time":{"start":1744665770198,"stop":1744665775044,"duration":4846}},{"uid":"1be13e3a55dc475","reportUrl":"https://paceville.github.io/teamcityTests/api/57//#testresult/1be13e3a55dc475","status":"passed","time":{"start":1744664571647,"stop":1744664577530,"duration":5883}},{"uid":"65c7b29718e5200","reportUrl":"https://paceville.github.io/teamcityTests/api/56//#testresult/65c7b29718e5200","status":"passed","time":{"start":1744663329824,"stop":1744663334731,"duration":4907}},{"uid":"2c0389f8badab4d8","reportUrl":"https://paceville.github.io/teamcityTests/api/55//#testresult/2c0389f8badab4d8","status":"passed","time":{"start":1744662090111,"stop":1744662095414,"duration":5303}},{"uid":"dec9099a01337860","reportUrl":"https://paceville.github.io/teamcityTests/api/54//#testresult/dec9099a01337860","status":"passed","time":{"start":1744661113510,"stop":1744661118911,"duration":5401}},{"uid":"cc4900c5342e0d0d","reportUrl":"https://paceville.github.io/teamcityTests/api/53//#testresult/cc4900c5342e0d0d","status":"passed","time":{"start":1744660468223,"stop":1744660473592,"duration":5369}},{"uid":"983e669639642fc2","reportUrl":"https://paceville.github.io/teamcityTests/api/52//#testresult/983e669639642fc2","status":"passed","time":{"start":1744658835084,"stop":1744658840407,"duration":5323}}]},"tags":["regression","positive"]},"source":"c877554d7841a6a5.json","parameterValues":[]}